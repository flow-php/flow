<?php

declare(strict_types=1);
namespace Flow\Parquet\Thrift;

/**
 * Autogenerated by Thrift Compiler (0.19.0).
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;

/**
 * statistics of a given page type and encoding.
 */
class PageEncodingStats extends TBase
{
    public static $_TSPEC = [
        1 => [
            'var' => 'page_type',
            'isRequired' => true,
            'type' => TType::I32,
            'class' => '\Flow\Parquet\Thrift\PageType',
        ],
        2 => [
            'var' => 'encoding',
            'isRequired' => true,
            'type' => TType::I32,
            'class' => '\Flow\Parquet\Thrift\Encoding',
        ],
        3 => [
            'var' => 'count',
            'isRequired' => true,
            'type' => TType::I32,
        ],
    ];

    public static $isValidate = false;

    /**
     * number of pages of this type with this encoding *.
     *
     * @var int
     */
    public $count;

    /**
     * encoding of the page *.
     *
     * @var int
     */
    public $encoding;

    /**
     * the page type (data/dic/...) *.
     *
     * @var int
     */
    public $page_type;

    public function __construct($vals = null)
    {
        if (\is_array($vals)) {
            parent::__construct(self::$_TSPEC, $vals);
        }
    }

    public function getName()
    {
        return 'PageEncodingStats';
    }

    public function read($input)
    {
        return $this->_read('PageEncodingStats', self::$_TSPEC, $input);
    }

    public function write($output)
    {
        return $this->_write('PageEncodingStats', self::$_TSPEC, $output);
    }
}
