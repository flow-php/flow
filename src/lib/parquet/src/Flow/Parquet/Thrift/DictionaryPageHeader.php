<?php

declare(strict_types=1);
namespace Flow\Parquet\Thrift;

/**
 * Autogenerated by Thrift Compiler (0.19.0).
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;

/**
 * The dictionary page must be placed at the first position of the column chunk
 * if it is partly or completely dictionary encoded. At most one dictionary page
 * can be placed in a column chunk.
 */
class DictionaryPageHeader extends TBase
{
    public static $_TSPEC = [
        1 => [
            'var' => 'num_values',
            'isRequired' => true,
            'type' => TType::I32,
        ],
        2 => [
            'var' => 'encoding',
            'isRequired' => true,
            'type' => TType::I32,
            'class' => '\Flow\Parquet\Thrift\Encoding',
        ],
        3 => [
            'var' => 'is_sorted',
            'isRequired' => false,
            'type' => TType::BOOL,
        ],
    ];

    public static $isValidate = false;

    /**
     * Encoding using this dictionary page *.
     *
     * @var int
     */
    public $encoding;

    /**
     * If true, the entries in the dictionary are sorted in ascending order *.
     *
     * @var bool
     */
    public $is_sorted;

    /**
     * Number of values in the dictionary *.
     *
     * @var int
     */
    public $num_values;

    public function __construct($vals = null)
    {
        if (\is_array($vals)) {
            parent::__construct(self::$_TSPEC, $vals);
        }
    }

    public function getName()
    {
        return 'DictionaryPageHeader';
    }

    public function read($input)
    {
        return $this->_read('DictionaryPageHeader', self::$_TSPEC, $input);
    }

    public function write($output)
    {
        return $this->_write('DictionaryPageHeader', self::$_TSPEC, $output);
    }
}
