<?php

declare(strict_types=1);
namespace Flow\Parquet\Thrift;

/**
 * Autogenerated by Thrift Compiler (0.19.0).
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;

class EncryptionWithColumnKey extends TBase
{
    public static $_TSPEC = [
        1 => [
            'var' => 'path_in_schema',
            'isRequired' => true,
            'type' => TType::LST,
            'etype' => TType::STRING,
            'elem' => [
                'type' => TType::STRING,
            ],
        ],
        2 => [
            'var' => 'key_metadata',
            'isRequired' => false,
            'type' => TType::STRING,
        ],
    ];

    public static $isValidate = false;

    /**
     * Retrieval metadata of column encryption key *.
     *
     * @var string
     */
    public $key_metadata;

    /**
     * Column path in schema *.
     *
     * @var string[]
     */
    public $path_in_schema;

    public function __construct($vals = null)
    {
        if (\is_array($vals)) {
            parent::__construct(self::$_TSPEC, $vals);
        }
    }

    public function getName()
    {
        return 'EncryptionWithColumnKey';
    }

    public function read($input)
    {
        return $this->_read('EncryptionWithColumnKey', self::$_TSPEC, $input);
    }

    public function write($output)
    {
        return $this->_write('EncryptionWithColumnKey', self::$_TSPEC, $output);
    }
}
