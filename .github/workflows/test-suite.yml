name: Test Suite

on:
  pull_request:
  push:
    branches: [ 1.x ]
  schedule: [ { cron: '0 8 * * *' } ]

jobs:
  static-analyze:
    name: "Static Analyze"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      fail-fast: false
      matrix:
        dependencies:
          - "locked"
        php-version:
          - "8.1"
        operating-system:
          - "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: pcov
          tools: composer:v2
          php-version: "${{ matrix.php-version }}"
          ini-values: memory_limit=-1

      - name: "Get Composer Cache Directory"
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache Composer dependencies"
        uses: "actions/cache@v2"
        with:
          path: |
            ${{ steps.composer-cache.outputs.dir }}
          key: "php-${{ matrix.php-version }}-locked-composer-${{ hashFiles('**/composer.lock') }}"
          restore-keys: |
            php-${{ matrix.php-version }}-locked-composer-

      - name: "Install locked dependencies"
        run: "composer install --no-interaction --no-progress"

      - name: "Static Analyze"
        run: "composer static:analyze"

  tests:
    name: "Tests"

    runs-on: ${{ matrix.operating-system }}

    services:
      elasticsearch:
        image: elasticsearch:7.17.2
        env:
          discovery.type: single-node
        options: >-
          --health-cmd "curl http://localhost:9200/_cluster/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 9200:9200
      postgres:
        image: postgres:13.6-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mysql:
        image: mysql:8.0.31-debian
        ports:
          - 3306/tcp
        environment:
          MYSQL_USER: mysql
          MYSQL_PASSWORD: mysql
          MYSQL_DATABASE: mysql
          MYSQL_ROOT_PASSWORD: root

    strategy:
      fail-fast: false
      matrix:
        dependencies:
          - "locked"
          - "lowest"
          - "highest"
        php-version:
          - "8.1"
        operating-system:
          - "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: pcov
          tools: composer:v2
          php-version: "${{ matrix.php-version }}"
          ini-values: memory_limit=-1

      - name: "Get Composer Cache Directory"
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache Composer dependencies"
        uses: "actions/cache@v2"
        with:
          path: |
            ${{ steps.composer-cache.outputs.dir }}
          key: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}-composer-${{ hashFiles('**/composer.lock') }}"
          restore-keys: |
            php-${{ matrix.php-version }}-${{ matrix.dependencies }}-composer-

      - name: "Install lowest dependencies"
        if: ${{ matrix.dependencies == 'lowest' }}
        run: "composer update --prefer-lowest --no-interaction --no-progress --no-suggest"

      - name: "Install highest dependencies"
        if: ${{ matrix.dependencies == 'highest' }}
        run: "composer update --no-interaction --no-progress --no-suggest"

      - name: "Install locked dependencies"
        if: ${{ matrix.dependencies == 'locked' }}
        run: "composer install --no-interaction --no-progress --no-suggest"

      - name: "Test"
        run: "composer test"
        env:
          PGSQL_DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:${{ job.services.postgres.ports[5432] }}/postgres?serverVersion=11&charset=utf8
          MYSQL_DATABASE_URL: mysql://mysql:mysql@127.0.0.1:${{ job.services.mysql.ports[3306] }}/mysql

  mutation-tests:
    name: "Mutation Tests"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      fail-fast: false
      matrix:
        dependencies:
          - "locked"
        php-version:
          - "8.1"
        operating-system:
          - "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: pcov
          tools: composer:v2
          php-version: "${{ matrix.php-version }}"
          ini-values: memory_limit=-1

      - name: "Get Composer Cache Directory"
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache Composer dependencies"
        uses: "actions/cache@v2"
        with:
          path: |
            ${{ steps.composer-cache.outputs.dir }}
          key: "php-${{ matrix.php-version }}-locked-composer-${{ hashFiles('**/composer.lock') }}"
          restore-keys: |
            php-${{ matrix.php-version }}-locked-composer-

      - name: "Install locked dependencies"
        run: "composer install --no-interaction --no-progress --no-suggest"

      - name: "Mutation Tests"
        run: "composer test:mutation"
